version: "3"
services:
#  Create a service named db.
  db-postgres:
#   Use the Docker Image postgres. This will pull the newest release.
    image: "postgres"
#   Give the container the name my_postgres. You can changes to something else.
    container_name: "postgres-rolodex-dev"
#   Setup the username, password, and database name. You can changes these values.
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
#   Maps port 2346 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
    ports:
      - "2346:5432"
#   Set a volume some that database is not lost after shutting down the container.
#   I used the name postgres-data but you can changed it to something else.
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

#   db-redis:
# #   Use the Docker Image postgres. This will pull the newest release.
#     image: "redis"
# #   Give the container the name my_postgres. You can changes to something else.
#     container_name: "redis-dev"
# #   Run Redis server instance
#     command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS_AUTH_PASSWORD}"]
# #   Setup the username, password, and database name. You can changes these values.
# #     environment:
# #       - POSTGRES_USER=${PG_USER}
# #       - POSTGRES_PASSWORD=${PG_PASSWORD}
# #       - POSTGRES_DB=${PG_DATABASE}
# #   Maps port 2345 (localhost) to port 5432 on the container. You can change the ports to fix your needs.
#     ports:
#       - "9736:6379"
# #   Set a volume some that database is not lost after shutting down the container.
# #   I used the name postgres-data but you can changed it to something else.
#     volumes:
#       - ./redis-data:/data
#     restart: "always"

#   nginx:
# #   Use the Docker Image postgres. This will pull the newest release.
#     image: "nginx:latest"
# #   Give the container the name my_postgres. You can changes to something else.
#     container_name: "nginx-dev"
# #   Run Redis server instance
#     volumes:
#       - ./nginx-data/nginx.conf:/etc/nginx/nginx.conf
#       - ./nginx-data/certs/server.crt:/etc/nginx/conf.d/server.crt
#       - ./nginx-data/certs/server.key:/etc/nginx/conf.d/server.key
# #   Maps port 8080 (localhost) to port 443 on the container.
#     ports:
#       - "8080:443"
#       - 80:80
#       - 443:443
